// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.0
// source: steammessages_auth.steamclient.proto

package steam

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CCloudGaming_CreateNonce_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform *string `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	Appid    *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
}

func (x *CCloudGaming_CreateNonce_Request) Reset() {
	*x = CCloudGaming_CreateNonce_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_auth_steamclient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloudGaming_CreateNonce_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloudGaming_CreateNonce_Request) ProtoMessage() {}

func (x *CCloudGaming_CreateNonce_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_auth_steamclient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloudGaming_CreateNonce_Request.ProtoReflect.Descriptor instead.
func (*CCloudGaming_CreateNonce_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_auth_steamclient_proto_rawDescGZIP(), []int{0}
}

func (x *CCloudGaming_CreateNonce_Request) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *CCloudGaming_CreateNonce_Request) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

type CCloudGaming_CreateNonce_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce  *string `protobuf:"bytes,1,opt,name=nonce" json:"nonce,omitempty"`
	Expiry *uint32 `protobuf:"varint,2,opt,name=expiry" json:"expiry,omitempty"`
}

func (x *CCloudGaming_CreateNonce_Response) Reset() {
	*x = CCloudGaming_CreateNonce_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_auth_steamclient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloudGaming_CreateNonce_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloudGaming_CreateNonce_Response) ProtoMessage() {}

func (x *CCloudGaming_CreateNonce_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_auth_steamclient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloudGaming_CreateNonce_Response.ProtoReflect.Descriptor instead.
func (*CCloudGaming_CreateNonce_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_auth_steamclient_proto_rawDescGZIP(), []int{1}
}

func (x *CCloudGaming_CreateNonce_Response) GetNonce() string {
	if x != nil && x.Nonce != nil {
		return *x.Nonce
	}
	return ""
}

func (x *CCloudGaming_CreateNonce_Response) GetExpiry() uint32 {
	if x != nil && x.Expiry != nil {
		return *x.Expiry
	}
	return 0
}

type CCloudGaming_GetTimeRemaining_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform  *string  `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	AppidList []uint32 `protobuf:"varint,2,rep,name=appid_list,json=appidList" json:"appid_list,omitempty"`
}

func (x *CCloudGaming_GetTimeRemaining_Request) Reset() {
	*x = CCloudGaming_GetTimeRemaining_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_auth_steamclient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloudGaming_GetTimeRemaining_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloudGaming_GetTimeRemaining_Request) ProtoMessage() {}

func (x *CCloudGaming_GetTimeRemaining_Request) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_auth_steamclient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloudGaming_GetTimeRemaining_Request.ProtoReflect.Descriptor instead.
func (*CCloudGaming_GetTimeRemaining_Request) Descriptor() ([]byte, []int) {
	return file_steammessages_auth_steamclient_proto_rawDescGZIP(), []int{2}
}

func (x *CCloudGaming_GetTimeRemaining_Request) GetPlatform() string {
	if x != nil && x.Platform != nil {
		return *x.Platform
	}
	return ""
}

func (x *CCloudGaming_GetTimeRemaining_Request) GetAppidList() []uint32 {
	if x != nil {
		return x.AppidList
	}
	return nil
}

type CCloudGaming_TimeRemaining struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	MinutesRemaining *uint32 `protobuf:"varint,2,opt,name=minutes_remaining,json=minutesRemaining" json:"minutes_remaining,omitempty"`
}

func (x *CCloudGaming_TimeRemaining) Reset() {
	*x = CCloudGaming_TimeRemaining{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_auth_steamclient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloudGaming_TimeRemaining) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloudGaming_TimeRemaining) ProtoMessage() {}

func (x *CCloudGaming_TimeRemaining) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_auth_steamclient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloudGaming_TimeRemaining.ProtoReflect.Descriptor instead.
func (*CCloudGaming_TimeRemaining) Descriptor() ([]byte, []int) {
	return file_steammessages_auth_steamclient_proto_rawDescGZIP(), []int{3}
}

func (x *CCloudGaming_TimeRemaining) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CCloudGaming_TimeRemaining) GetMinutesRemaining() uint32 {
	if x != nil && x.MinutesRemaining != nil {
		return *x.MinutesRemaining
	}
	return 0
}

type CCloudGaming_GetTimeRemaining_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*CCloudGaming_TimeRemaining `protobuf:"bytes,2,rep,name=entries" json:"entries,omitempty"`
}

func (x *CCloudGaming_GetTimeRemaining_Response) Reset() {
	*x = CCloudGaming_GetTimeRemaining_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_steammessages_auth_steamclient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CCloudGaming_GetTimeRemaining_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCloudGaming_GetTimeRemaining_Response) ProtoMessage() {}

func (x *CCloudGaming_GetTimeRemaining_Response) ProtoReflect() protoreflect.Message {
	mi := &file_steammessages_auth_steamclient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCloudGaming_GetTimeRemaining_Response.ProtoReflect.Descriptor instead.
func (*CCloudGaming_GetTimeRemaining_Response) Descriptor() ([]byte, []int) {
	return file_steammessages_auth_steamclient_proto_rawDescGZIP(), []int{4}
}

func (x *CCloudGaming_GetTimeRemaining_Response) GetEntries() []*CCloudGaming_TimeRemaining {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_steammessages_auth_steamclient_proto protoreflect.FileDescriptor

var file_steammessages_auth_steamclient_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x20, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x21, 0x43, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x62, 0x0a,
	0x25, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x70, 0x70, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x5f, 0x0a, 0x1a, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0x5f, 0x0a, 0x26, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x32, 0xf2, 0x02, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d,
	0x69, 0x6e, 0x67, 0x12, 0x8b, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f,
	0x6e, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x5f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xb5, 0x18, 0x31,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x67, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0xa5, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47,
	0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x43, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x47, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x47, 0x65,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xb5, 0x18, 0x3c, 0x47, 0x65, 0x74,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x73, 0x65,
	0x74, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x70, 0x70, 0x73, 0x1a, 0x2d, 0x82, 0xb5, 0x18, 0x29, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x53, 0x74, 0x65, 0x61, 0x6d,
	0x20, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x20, 0x67, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x33, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x62, 0x70, 0x73, 0x2f, 0x67, 0x6f, 0x2d, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x73,
	0x74, 0x65, 0x61, 0x6d, 0x3b, 0x73, 0x74, 0x65, 0x61, 0x6d, 0x80, 0x01, 0x01,
}

var (
	file_steammessages_auth_steamclient_proto_rawDescOnce sync.Once
	file_steammessages_auth_steamclient_proto_rawDescData = file_steammessages_auth_steamclient_proto_rawDesc
)

func file_steammessages_auth_steamclient_proto_rawDescGZIP() []byte {
	file_steammessages_auth_steamclient_proto_rawDescOnce.Do(func() {
		file_steammessages_auth_steamclient_proto_rawDescData = protoimpl.X.CompressGZIP(file_steammessages_auth_steamclient_proto_rawDescData)
	})
	return file_steammessages_auth_steamclient_proto_rawDescData
}

var file_steammessages_auth_steamclient_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_steammessages_auth_steamclient_proto_goTypes = []interface{}{
	(*CCloudGaming_CreateNonce_Request)(nil),       // 0: CCloudGaming_CreateNonce_Request
	(*CCloudGaming_CreateNonce_Response)(nil),      // 1: CCloudGaming_CreateNonce_Response
	(*CCloudGaming_GetTimeRemaining_Request)(nil),  // 2: CCloudGaming_GetTimeRemaining_Request
	(*CCloudGaming_TimeRemaining)(nil),             // 3: CCloudGaming_TimeRemaining
	(*CCloudGaming_GetTimeRemaining_Response)(nil), // 4: CCloudGaming_GetTimeRemaining_Response
}
var file_steammessages_auth_steamclient_proto_depIdxs = []int32{
	3, // 0: CCloudGaming_GetTimeRemaining_Response.entries:type_name -> CCloudGaming_TimeRemaining
	0, // 1: CloudGaming.CreateNonce:input_type -> CCloudGaming_CreateNonce_Request
	2, // 2: CloudGaming.GetTimeRemaining:input_type -> CCloudGaming_GetTimeRemaining_Request
	1, // 3: CloudGaming.CreateNonce:output_type -> CCloudGaming_CreateNonce_Response
	4, // 4: CloudGaming.GetTimeRemaining:output_type -> CCloudGaming_GetTimeRemaining_Response
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_steammessages_auth_steamclient_proto_init() }
func file_steammessages_auth_steamclient_proto_init() {
	if File_steammessages_auth_steamclient_proto != nil {
		return
	}
	file_steammessages_unified_base_steamclient_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_steammessages_auth_steamclient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloudGaming_CreateNonce_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_auth_steamclient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloudGaming_CreateNonce_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_auth_steamclient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloudGaming_GetTimeRemaining_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_auth_steamclient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloudGaming_TimeRemaining); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_steammessages_auth_steamclient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CCloudGaming_GetTimeRemaining_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_steammessages_auth_steamclient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_steammessages_auth_steamclient_proto_goTypes,
		DependencyIndexes: file_steammessages_auth_steamclient_proto_depIdxs,
		MessageInfos:      file_steammessages_auth_steamclient_proto_msgTypes,
	}.Build()
	File_steammessages_auth_steamclient_proto = out.File
	file_steammessages_auth_steamclient_proto_rawDesc = nil
	file_steammessages_auth_steamclient_proto_goTypes = nil
	file_steammessages_auth_steamclient_proto_depIdxs = nil
}
